<?php

use Illuminate\Database\Migrations\Migration;
use Illuminate\Database\Schema\Blueprint;
use Illuminate\Support\Facades\Schema;

class CreateSlotsTable extends Migration
{
    public function up()
    {
        Schema::create('slots', function (Blueprint $table) {
            $userModel = config('tipoff.model_class.user');
            $userTable = (new $userModel)->getTable();

            $roomModel = config('tipoff.model_class.room');
            $roomTable = (new $roomModel)->getTable();

            $rateModel = config('tipoff.model_class.rate');
            $rateTable = (new $rateModel)->getTable();

            $supervisionModel = config('tipoff.model_class.supervision');
            $supervisionTable = (new $supervisionModel)->getTable();

            $table->id();
            $table->string('slot_number')->index(); // Generated by system. This is identifier used to coordinate with virtual slots.
            $table->foreignId('room_id')->index()->references('id')->on($roomTable);
            $table->foreignId('rate_id')->references('id')->on($rateTable); // Can override the default rate for the room.
            $table->unsignedBigInteger('schedule_id')->nullable();
            $table->string('schedule_type')->nullable();
            $table->date('date')->index();
            $table->dateTime('start_at');
            $table->dateTime('end_at'); // Computed from room->duration
            $table->dateTime('room_available_at'); // Time when the room is available for another slot. Automatically computed by adding room->occupied_time to slot->start_at
            $table->unsignedTinyInteger('participants');
            $table->unsignedTinyInteger('participants_blocked');
            $table->unsignedTinyInteger('participants_available'); // Capacity - defaults to room capacity for public games
            $table->foreignId('supervision_id')->references('id')->on($supervisionTable);
            $table->foreignId('updater_id')->nullable()->references('id')->on($userTable);
            $table->timestamps();

            $table->index(['schedule_id', 'schedule_type']);
        });
    }
}
